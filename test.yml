---
  - hosts: localhost
    vars:
      test_zone: nsonetestzone.com
      # debug: on
    tasks:

    ###
    # Test zone life cycles
    ##
      - name: create zone test
        local_action:
          module: ns1_zone
          apiKey: "{{ key }}"
          name: "{{ test_zone }}"
          state: present
          refresh: 200
        register: return

      - debug: var=return
        when: debug is defined

      - name: update zone test
        local_action:
          module: ns1_zone
          apiKey: "{{ key }}"
          name: "{{ test_zone }}"
          state: present
          refresh: 300
        register: return

      - debug: var=return
        when: debug is defined

      - name: no update zone test
        local_action:
          module: ns1_zone
          apiKey: "{{ key }}"
          name: "{{ test_zone }}"
          state: present
          refresh: 300
        register: return

      - debug: var=return
        when: debug is defined

      - name: delete zone test
        local_action:
          module: ns1_zone
          apiKey: "{{ key }}"
          name: "{{ test_zone }}"
          state: absent
        register: return

      - debug: var=return
        when: debug is defined

    ###
    # Test record life cycles
    ##
      - name: create zone for record tests
        local_action:
          module: ns1_zone
          apiKey: "{{ key }}"
          name: "{{ test_zone }}"
          state: present
        register: return

      - debug: var=return
        when: debug is defined

      - name: test record creation
        local_action:
          module: ns1_record
          apiKey: "{{ key }}"
          name: www
          zone: "{{ test_zone }}"
          state: present
          type: A
          answers:
            - answer:
                - 192.168.1.0
              meta:
                up: True
            - answer:
                - 192.168.1.1
              meta:
                up: True
          filters:
            - filter: up
              config: {}
        register: return

      - debug: var=return
        when: debug is defined

      - name: update record test
        local_action:
          module: ns1_record
          apiKey: "{{ key }}"
          name: www
          zone: "{{ test_zone }}"
          state: present
          type: A
          answers:
            - answer:
                - 192.168.1.0
              meta:
                up: True
          filters:
            - filter: up
              config: {}
          ttl: 3600
        register: return

      - debug: var=return
        when: debug is defined

      - name: test record no change
        local_action:
          module: ns1_record
          apiKey: "{{ key }}"
          name: www
          zone: "{{ test_zone }}"
          state: present
          type: A
          answers:
            - answer:
                - 192.168.1.0
              meta:
                up: True
          filters:
            - filter: up
              config: {}
          ttl: 3600
        register: return

      - debug: var=return
        when: debug is defined

      - name: remove filters record test
        local_action:
          module: ns1_record
          apiKey: "{{ key }}"
          name: www
          zone: "{{ test_zone }}"
          state: present
          type: A
          answers:
            - answer:
                - 192.168.1.0
              meta:
                up: True
          filters: []
          ttl: 3600
        register: return

      - debug: var=return
        when: debug is defined

      - name: test record delete with existing zone
        local_action:
          module: ns1_record
          apiKey: "{{ key }}"
          name: www
          zone: "{{ test_zone }}"
          state: absent
          type: A
          answers: []
        register: return

      - debug: var=return
        when: debug is defined

      - name: clean up zone from record tests
        local_action:
          module: ns1_zone
          apiKey: "{{ key }}"
          name: "{{ test_zone }}"
          state: absent
        register: return

      - debug: var=return
        when: debug is defined

      - name: test record delete without existing zone
        local_action:
          module: ns1_record
          apiKey: "{{ key }}"
          name: www
          zone: "{{ test_zone }}"
          state: absent
          type: A
          answers: []
          ignore_missing_zone: True
        register: return

      - debug: var=return
        when: debug is defined


